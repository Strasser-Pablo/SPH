Voisin_Iterator::Voisin_Iterator(list<Particles*>& lparticles,list<Particles*>::iterator particles,Particles::iterator particle):m_particles(particles),m_particle(particle),m_lpart(lparticles){
	
}

Voisin_Iterator Voisin_Iterator::operator++(){
	++m_particle;
	if(m_particle==(*m_particles)->end()){
	++m_particles;
	m_particle=(*m_particles)->begin();
	}
	return *this;
}

Voisin_Iterator Voisin_Iterator::operator++(int){
	Voisin_Iterator vois(*this);
	++m_particle;
	if(m_particle==(*m_particles)->end()){
	++m_particles;
	m_particle=(*m_particles)->begin();
	}
	return vois;
}

Particle Voisin_Iterator::operator *(){
	return *m_particle;
}

bool Voisin_Iterator::operator ==(const Voisin_Iterator& B){
	return m_particle==B.m_particle&& m_particles==B.m_particles;
}